use("elements");

ma=meshing(2);

node_add(ma, [1.000000E+00, -1.748456E-07]);
node_add(ma, [9.510565E-01,  3.090168E-01]);
node_add(ma, [8.090171E-01, 5.877851E-01]);
node_add(ma, [5.877854E-01, 8.090169E-01]);
node_add(ma, [3.090171E-01, 9.510565E-01]);
node_add(ma, [1.311342E-07, 1.000000E+00]);
node_add(ma, [-3.090169E-01, 9.510565E-01]);
node_add(ma, [-5.877851E-01, 8.090171E-01]);
node_add(ma, [-8.090169E-01, 5.877854E-01]);
node_add(ma, [-9.510565E-01, 3.090170E-01]);
node_add(ma, [-1.000000E+00, -1.509958E-07]);
node_add(ma, [-9.510564E-01, -3.090173E-01]);
node_add(ma, [-8.090168E-01, -5.877856E-01]);
node_add(ma, [-5.877848E-01, -8.090173E-01]);
node_add(ma, [-3.090164E-01, -9.510567E-01]);
node_add(ma, [7.907536E-07, -1.000000E+00]);
node_add(ma, [3.090179E-01, -9.510562E-01]);
node_add(ma, [5.877861E-01, -8.090164E-01]);
node_add(ma, [8.090177E-01, -5.877843E-01]);
node_add(ma, [9.510569E-01, -3.090158E-01]);
node_add(ma, [2.000000E+00, 0.000000E+00]);
node_add(ma, [1.975377E+00, 3.128690E-01]);
node_add(ma, [1.902113E+00, 6.180340E-01]);
node_add(ma, [1.782013E+00, 9.079810E-01]);
node_add(ma, [1.618034E+00, 1.175570E+00]);
node_add(ma, [1.414214E+00, 1.414214E+00]);
node_add(ma, [1.175570E+00, 1.618034E+00]);
node_add(ma, [9.079810E-01, 1.782013E+00]);
node_add(ma, [6.180339E-01, 1.902113E+00]);
node_add(ma, [3.128687E-01, 1.975377E+00]);
node_add(ma, [-3.258414E-07, 2.000000E+00]);
node_add(ma, [-3.128694E-01, 1.975377E+00]);
node_add(ma, [-6.180345E-01, 1.902113E+00]);
node_add(ma, [-9.079816E-01, 1.782013E+00]);
node_add(ma, [-1.175571E+00, 1.618034E+00]);
node_add(ma, [-1.414214E+00, 1.414213E+00]);
node_add(ma, [-1.618035E+00, 1.175570E+00]);
node_add(ma, [-1.782014E+00, 9.079799E-01]);
node_add(ma, [-1.902113E+00, 6.180327E-01]);
node_add(ma, [-1.975377E+00, 3.128675E-01]);
node_add(ma, [-2.000000E+00, -1.605357E-06]);
node_add(ma, [-1.975376E+00, -3.128707E-01]);
node_add(ma, [-1.902112E+00, -6.180357E-01]);
node_add(ma, [-1.782012E+00, -9.079828E-01]);
node_add(ma, [-1.618033E+00, -1.175572E+00]);
node_add(ma, [-1.414212E+00, -1.414215E+00]);
node_add(ma, [-1.175569E+00, -1.618035E+00]);
node_add(ma, [-9.079788E-01, -1.782014E+00]);
node_add(ma, [-6.180315E-01, -1.902114E+00]);
node_add(ma, [-3.128662E-01, -1.975377E+00]);
node_add(ma, [2.884873E-06, -2.000000E+00]);
node_add(ma, [3.128719E-01, -1.975376E+00]);
node_add(ma, [6.180370E-01, -1.902112E+00]);
node_add(ma, [9.079839E-01, -1.782012E+00]);
node_add(ma, [1.175573E+00, -1.618032E+00]);
node_add(ma, [1.414216E+00, -1.414211E+00]);
node_add(ma, [1.618036E+00, -1.175568E+00]);
node_add(ma, [1.782015E+00, -9.079776E-01]);
node_add(ma, [1.902114E+00, -6.180303E-01]);
node_add(ma, [1.975377E+00, -3.128649E-01]);
node_add(ma, [-1.728847E+00, -1.191127E-01]);
node_add(ma, [-1.512747E+00, -5.907423E-01]);
node_add(ma, [-1.718002E+00, -3.813685E-01]);
node_add(ma, [-1.499119E+00, 3.452417E-01]);
node_add(ma, [-1.727211E+00, 1.848233E-01]);
node_add(ma, [-1.221437E+00, -1.174133E-01]);
node_add(ma, [-1.688607E+00, 5.347643E-01]);
node_add(ma, [-1.378590E+00, -8.302042E-01]);
node_add(ma, [-1.443395E+00, 8.070226E-01]);
node_add(ma, [-1.186609E+00, -4.277804E-01]);
node_add(ma, [-1.242283E+00, -1.312502E+00]);
node_add(ma, [-9.024494E-01, -7.915440E-01]);
node_add(ma, [-8.961840E-01, -1.453377E+00]);
node_add(ma, [-1.140583E+00, 1.004367E+00]);
node_add(ma, [-5.893974E-01, 1.190079E+00]);
node_add(ma, [-1.009516E+00, -1.144395E+00]);
node_add(ma, [-8.450828E-01, -9.662171E-01]);
node_add(ma, [-1.161320E+00, 1.324669E+00]);
node_add(ma, [-6.101780E-01, -1.478651E+00]);
node_add(ma, [-3.110324E-01, 1.280989E+00]);
node_add(ma, [-6.147146E-01, -1.179337E+00]);
node_add(ma, [-9.808270E-01, 1.499539E+00]);
node_add(ma, [-1.358104E+00, -1.046718E+00]);
node_add(ma, [-2.754691E-01, -1.177628E+00]);
node_add(ma, [1.486102E-01, 1.323506E+00]);
node_add(ma, [-1.876084E-01, -1.675942E+00]);
node_add(ma, [-7.342966E-01, 1.531685E+00]);
node_add(ma, [1.093084E-01, -1.585721E+00]);
node_add(ma, [4.868445E-01, 1.309532E+00]);
node_add(ma, [-8.952527E-02, -1.357615E+00]);
node_add(ma, [-1.475724E+00, -2.652879E-01]);
node_add(ma, [6.223545E-01, -1.628410E+00]);
node_add(ma, [9.051735E-01, 9.930778E-01]);
node_add(ma, [-1.459070E-01, 1.747360E+00]);
node_add(ma, [-1.498283E+00, 5.514911E-01]);
node_add(ma, [4.662729E-01, -1.216692E+00]);
node_add(ma, [1.170755E+00, 7.683103E-01]);
node_add(ma, [8.284118E-01, -9.372033E-01]);
node_add(ma, [1.361604E+00, 2.267278E-01]);
node_add(ma, [1.371467E+00, -1.038635E+00]);
node_add(ma, [3.931341E-01, -1.474930E+00]);
node_add(ma, [9.628403E-02, 1.692592E+00]);
node_add(ma, [1.138216E+00, -1.285730E+00]);
node_add(ma, [8.736076E-01, -1.435872E+00]);
node_add(ma, [3.912972E-01, 1.628162E+00]);
node_add(ma, [9.317176E-01, 1.519251E+00]);
node_add(ma, [1.108981E+00, -7.262864E-01]);
node_add(ma, [1.082296E+00, 1.324414E+00]);
node_add(ma, [1.272672E+00, -4.636524E-01]);
node_add(ma, [1.443736E+00, -2.958847E-01]);
node_add(ma, [-1.113786E+00, 6.281575E-01]);
node_add(ma, [1.278493E+00, 1.086825E+00]);
node_add(ma, [1.200041E+00, -2.291930E-01]);
node_add(ma, [1.651737E+00, 6.798605E-01]);
node_add(ma, [1.645527E+00, -1.002234E-01]);
node_add(ma, [1.674642E+00, 4.311650E-01]);
node_add(ma, [-1.231814E+00, 2.488430E-01]);
node_add(ma, [1.730157E+00, 1.741945E-01]);
node_add(ma, [-9.120464E-01, 1.245482E+00]);
node_add(ma, [-1.105895E+00, -9.102487E-01]);
node_add(ma, [-1.479492E+00, 4.657376E-02]);
node_add(ma, [-1.358012E+00, 5.154330E-01]);
node_add(ma, [-8.582955E-01, 9.072800E-01]);
node_add(ma, [-1.148921E+00, -6.906688E-01]);
node_add(ma, [-1.354341E+00, 1.145223E+00]);
node_add(ma, [-6.989701E-01, -1.657423E+00]);
node_add(ma, [-1.171391E-01, 1.206635E+00]);
node_add(ma, [-4.669292E-01, -1.688353E+00]);
node_add(ma, [6.160172E-01, 1.071108E+00]);
node_add(ma, [-3.747883E-01, -1.425294E+00]);
node_add(ma, [-4.030414E-01, 1.586762E+00]);
node_add(ma, [3.438818E-01, -1.759883E+00]);
node_add(ma, [1.662078E+00, -6.316173E-01]);
node_add(ma, [9.255173E-01, -1.178981E+00]);
node_add(ma, [6.886307E-01, 1.573370E+00]);
node_add(ma, [1.484304E+00, 8.674802E-01]);
node_add(ma, [1.978392E-01, -1.262380E+00]);
node_add(ma, [-1.217332E-01, 1.472362E+00]);
node_add(ma, [1.140948E+00, 4.925392E-01]);
node_add(ma, [5.824448E-01, -1.021223E+00]);
node_add(ma, [1.075759E+00, -1.034566E+00]);
node_add(ma, [6.134131E-01, -1.390272E+00]);
node_add(ma, [7.851452E-01, 1.297498E+00]);
node_add(ma, [1.689180E+00, -4.109177E-01]);
node_add(ma, [1.505571E+00, -5.020183E-01]);
node_add(ma, [1.414015E+00, 5.776414E-01]);
node_add(ma, [1.330602E+00, -7.973274E-02]);
node_add(ma, [7.142585E-01, -1.198347E+00]);
node_add(ma, [1.448628E+00, -7.110919E-01]);


mesh_add(ma, [41, 42, 61]);
mesh_add(ma, [75, 87, 119]);
mesh_add(ma, [125, 36, 37]);
mesh_add(ma, [120, 77, 72]);
mesh_add(ma, [43, 44, 62]);
mesh_add(ma, [77, 14, 72]);
mesh_add(ma, [42, 43, 63]);
mesh_add(ma, [68, 83, 120]);
mesh_add(ma, [41, 61, 65]);
mesh_add(ma, [81, 73, 79]);
mesh_add(ma, [61, 91, 121]);
mesh_add(ma, [ 7, 75,  8]);
mesh_add(ma, [40, 41, 65]);
mesh_add(ma, [12, 11, 66]);
mesh_add(ma, [95, 64, 122]);
mesh_add(ma, [45, 46, 71]);
mesh_add(ma, [82, 34, 35]);
mesh_add(ma, [ 9,  8, 123]);
mesh_add(ma, [111, 74, 69]);
mesh_add(ma, [68, 120, 124]);
mesh_add(ma, [67, 69, 38]);
mesh_add(ma, [46, 47, 71]);
mesh_add(ma, [74, 78, 125]);
mesh_add(ma, [74, 125, 69]);
mesh_add(ma, [48, 73, 47]);
mesh_add(ma, [14, 13, 72]);
mesh_add(ma, [48, 49, 126]);
mesh_add(ma, [123, 75, 119]);
mesh_add(ma, [ 7,  6, 127]);
mesh_add(ma, [71, 73, 76]);
mesh_add(ma, [76, 73, 81]);
mesh_add(ma, [35, 36, 78]);
mesh_add(ma, [83, 76, 120]);
mesh_add(ma, [128, 50, 86]);
mesh_add(ma, [ 6, 85, 127]);
mesh_add(ma, [77, 76, 81]);
mesh_add(ma, [124, 13, 70]);
mesh_add(ma, [119, 87, 82]);
mesh_add(ma, [45, 71, 83]);
mesh_add(ma, [79, 126, 128]);
mesh_add(ma, [ 5,  4, 129]);
mesh_add(ma, [86, 130, 128]);
mesh_add(ma, [71, 47, 73]);
mesh_add(ma, [33, 34, 87]);
mesh_add(ma, [86, 51, 88]);
mesh_add(ma, [ 4, 93, 129]);
mesh_add(ma, [84, 81, 130]);
mesh_add(ma, [80, 138, 131]);
mesh_add(ma, [63, 62, 91]);
mesh_add(ma, [88, 51, 132]);
mesh_add(ma, [ 3,  2, 139]);
mesh_add(ma, [16, 84, 90]);
mesh_add(ma, [70, 12, 66]);
mesh_add(ma, [31, 32, 94]);
mesh_add(ma, [122, 117, 111]);
mesh_add(ma, [140, 17, 96]);
mesh_add(ma, [136, 25, 112]);
mesh_add(ma, [19, 18, 98]);
mesh_add(ma, [116, 23, 114]);
mesh_add(ma, [58, 59, 133]);
mesh_add(ma, [96, 137, 101]);
mesh_add(ma, [69, 37, 38]);
mesh_add(ma, [85, 89, 105]);
mesh_add(ma, [44, 68, 62]);
mesh_add(ma, [56, 100, 103]);
mesh_add(ma, [70, 13, 12]);
mesh_add(ma, [105, 30, 102]);
mesh_add(ma, [103, 100, 141]);
mesh_add(ma, [89, 143, 135]);
mesh_add(ma, [40, 67, 39]);
mesh_add(ma, [27, 28, 106]);
mesh_add(ma, [67, 38, 39]);
mesh_add(ma, [149, 58, 133]);
mesh_add(ma, [63, 91, 61]);
mesh_add(ma, [107, 19, 98]);
mesh_add(ma, [66, 11, 117]);
mesh_add(ma, [93, 97, 112]);
mesh_add(ma, [67, 65, 64]);
mesh_add(ma, [20, 107, 109]);
mesh_add(ma, [65, 61, 121]);
mesh_add(ma, [112, 26, 108]);
mesh_add(ma, [40, 65, 67]);
mesh_add(ma, [147,  1, 113]);
mesh_add(ma, [69, 95, 122]);
mesh_add(ma, [97, 146, 136]);
mesh_add(ma, [42, 63, 61]);
mesh_add(ma, [ 1, 20, 113]);
mesh_add(ma, [91, 62, 70]);
mesh_add(ma, [23, 24, 114]);
mesh_add(ma, [124, 62, 68]);
mesh_add(ma, [110, 144, 115]);
mesh_add(ma, [83, 44, 45]);
mesh_add(ma, [99, 115, 118]);
mesh_add(ma, [10, 111, 117]);
mesh_add(ma, [115, 21, 118]);
mesh_add(ma, [62, 63, 43]);
mesh_add(ma, [81, 15, 14]);
mesh_add(ma, [48, 126, 73]);
mesh_add(ma, [87, 131, 33]);
mesh_add(ma, [ 7, 80, 75]);
mesh_add(ma, [81, 79, 130]);
mesh_add(ma, [77, 81, 14]);
mesh_add(ma, [82, 35, 78]);
mesh_add(ma, [74, 119, 78]);
mesh_add(ma, [83, 71, 76]);
mesh_add(ma, [44, 83, 68]);
mesh_add(ma, [84, 16, 15]);
mesh_add(ma, [81, 84, 15]);
mesh_add(ma, [94, 102, 31]);
mesh_add(ma, [ 5, 85,  6]);
mesh_add(ma, [86, 50, 51]);
mesh_add(ma, [52, 132, 51]);
mesh_add(ma, [87, 34, 82]);
mesh_add(ma, [80, 131, 75]);
mesh_add(ma, [92, 132, 53]);
mesh_add(ma, [16, 90, 137]);
mesh_add(ma, [105, 135, 29]);
mesh_add(ma, [ 5, 89, 85]);
mesh_add(ma, [90, 86, 88]);
mesh_add(ma, [137, 90, 88]);
mesh_add(ma, [91, 70, 66]);
mesh_add(ma, [121, 91, 66]);
mesh_add(ma, [92, 53, 54]);
mesh_add(ma, [55, 103, 104]);
mesh_add(ma, [106, 108, 27]);
mesh_add(ma, [ 3, 93,  4]);
mesh_add(ma, [131, 32, 33]);
mesh_add(ma, [127, 85, 138]);
mesh_add(ma, [95, 69, 67]);
mesh_add(ma, [64, 95, 67]);
mesh_add(ma, [137, 17, 16]);
mesh_add(ma, [92, 104, 142]);
mesh_add(ma, [97, 93,  3]);
mesh_add(ma, [99, 116, 146]);
mesh_add(ma, [98, 18, 140]);
mesh_add(ma, [57, 100, 56]);
mesh_add(ma, [99,  2,  1]);
mesh_add(ma, [113, 109, 110]);
mesh_add(ma, [100, 107, 141]);
mesh_add(ma, [58, 100, 57]);
mesh_add(ma, [101, 88, 132]);
mesh_add(ma, [54, 104, 92]);
mesh_add(ma, [102, 30, 31]);
mesh_add(ma, [131, 138, 94]);
mesh_add(ma, [142, 104, 148]);
mesh_add(ma, [56, 103, 55]);
mesh_add(ma, [104, 134, 148]);
mesh_add(ma, [55, 104, 54]);
mesh_add(ma, [105, 29, 30]);
mesh_add(ma, [85, 105, 102]);
mesh_add(ma, [135, 28, 29]);
mesh_add(ma, [129, 93, 143]);
mesh_add(ma, [107, 20, 19]);
mesh_add(ma, [141, 107, 98]);
mesh_add(ma, [108, 26, 27]);
mesh_add(ma, [135, 143, 106]);
mesh_add(ma, [149, 107, 100]);
mesh_add(ma, [60, 115, 144]);
mesh_add(ma, [110, 109, 145]);
mesh_add(ma, [21, 115, 60]);
mesh_add(ma, [111, 10,  9]);
mesh_add(ma, [123, 111,  9]);
mesh_add(ma, [112, 25, 26]);
mesh_add(ma, [93, 112, 108]);
mesh_add(ma, [113, 20, 109]);
mesh_add(ma, [115, 147, 110]);
mesh_add(ma, [136, 24, 25]);
mesh_add(ma, [139, 99, 146]);
mesh_add(ma, [118, 21, 22]);
mesh_add(ma, [113, 110, 147]);
mesh_add(ma, [116, 22, 23]);
mesh_add(ma, [136, 146, 114]);
mesh_add(ma, [117, 64, 121]);
mesh_add(ma, [10, 117, 11]);
mesh_add(ma, [118, 22, 116]);
mesh_add(ma, [99, 118, 116]);
mesh_add(ma, [119, 82, 78]);
mesh_add(ma, [123, 119, 74]);
mesh_add(ma, [120, 76, 77]);
mesh_add(ma, [124, 120, 72]);
mesh_add(ma, [121, 66, 117]);
mesh_add(ma, [65, 121, 64]);
mesh_add(ma, [122, 64, 117]);
mesh_add(ma, [69, 122, 111]);
mesh_add(ma, [123,  8, 75]);
mesh_add(ma, [111, 123, 74]);
mesh_add(ma, [124, 72, 13]);
mesh_add(ma, [62, 124, 70]);
mesh_add(ma, [125, 78, 36]);
mesh_add(ma, [69, 125, 37]);
mesh_add(ma, [128, 49, 50]);
mesh_add(ma, [73, 126, 79]);
mesh_add(ma, [138, 85, 102]);
mesh_add(ma, [ 7, 127, 80]);
mesh_add(ma, [128, 126, 49]);
mesh_add(ma, [90, 130, 86]);
mesh_add(ma, [143, 93, 108]);
mesh_add(ma, [ 5, 129, 89]);
mesh_add(ma, [130, 79, 128]);
mesh_add(ma, [84, 130, 90]);
mesh_add(ma, [131, 94, 32]);
mesh_add(ma, [75, 131, 87]);
mesh_add(ma, [132, 52, 53]);
mesh_add(ma, [101, 132, 92]);
mesh_add(ma, [133, 59, 144]);
mesh_add(ma, [100, 58, 149]);
mesh_add(ma, [148, 98, 140]);
mesh_add(ma, [103, 134, 104]);
mesh_add(ma, [135, 106, 28]);
mesh_add(ma, [89, 135, 105]);
mesh_add(ma, [136, 114, 24]);
mesh_add(ma, [97, 136, 112]);
mesh_add(ma, [137, 88, 101]);
mesh_add(ma, [17, 137, 96]);
mesh_add(ma, [138, 102, 94]);
mesh_add(ma, [127, 138, 80]);
mesh_add(ma, [139, 97,  3]);
mesh_add(ma, [99, 139,  2]);
mesh_add(ma, [140, 18, 17]);
mesh_add(ma, [142, 148, 96]);
mesh_add(ma, [141, 98, 134]);
mesh_add(ma, [103, 141, 134]);
mesh_add(ma, [142, 96, 101]);
mesh_add(ma, [92, 142, 101]);
mesh_add(ma, [143, 108, 106]);
mesh_add(ma, [129, 143, 89]);
mesh_add(ma, [144, 110, 145]);
mesh_add(ma, [60, 144, 59]);
mesh_add(ma, [145, 109, 149]);
mesh_add(ma, [144, 145, 133]);
mesh_add(ma, [146, 116, 114]);
mesh_add(ma, [139, 146, 97]);
mesh_add(ma, [147, 115, 99]);
mesh_add(ma, [ 1, 147, 99]);
mesh_add(ma, [148, 134, 98]);
mesh_add(ma, [96, 148, 140]);
mesh_add(ma, [149, 133, 145]);
mesh_add(ma, [107, 149, 109]);


#TODO: Fix this!
#renum(ma);

mo=model(ma);
surface(mo);

pi=atan(1)*4;
surface(mo)/pi;
pi*(4-1);

#BC=bc(ext, "DX=0")+bc(int, "DX");
BC=bc();



lo=loading(group_mesh(ma), "FX=2");


P=problem(mo, BC, lo);

K=stiffness(P);

F=loading(P);

phi=solve_ldlt(K, F);


1;
quit;
###1